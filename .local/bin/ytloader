#!/bin/bash

OPTIND=1

outvideo="$(xdg-user-dir VIDEOS)"
outaudio="$(xdg-user-dir MUSIC)"
filename='%(title)s.%(ext)s'
format="m"

msg_download="YTLoader: Downloading"
msg_no_url="YTLoader: No URL given"
msg_fail="YTLoader: Download failed"
msg_invalid_format="YTLoader: Invalid format"
msg_loaded="YTLoader: Loaded"
msg_invalid_flag="YTLoader: Invalid option"

print_help() {
    echo "Usage: ytloader [options] link"
    echo "Description: downloads music and video from youtube"
    echo "    -h - show help and exit"
    echo "    -f - format."
    echo "         'a' - audio"
    echo "         'l' - low quality video (up to 240p)"
    echo "         'm' - medium quality video (up to 1080p) [default]"
    echo "         'h' - high quality video (best quality available)"
    echo "    -s - download video with subtitles (if available)"
    echo "    -d - subdirectory for file. Appends to default music/video path"
    echo "    -u - add uploader at the title"
    echo "    -p - for playlists: first video to download from"
    echo "    -c - path to cookies file"
}

declare -a other_args

while getopts "f:d:p:c:suh" opt; do
    case $opt in
        f) format=$OPTARG ;;
        d) subdir=$OPTARG ;;
        p) other_args+=("--playlist-start" "$OPTARG") ;;
        s) other_args+=("--all-subs") ;;
        c) other_args+=("--cookies" "$OPTARG") ;;
        u) filename='%(uploader)s - %(title)s.%(ext)s' ;;
        h) print_help ; exit 0 ;;
        *) notify-send "$msg_invalid_flag" && exit 1 ;;
    esac
done

shift $((OPTIND-1))
link=$1

[ -z "$link" ] && echo "$msg_no_url" && notify-send "$msg_no_url" && print_help && exit

if [ -z "$subdir" ]; then
    outaudio="${outaudio}/downloads"
else
    outvideo="${outvideo}/${subdir}"
    outaudio="${outaudio}/${subdir}"
fi

[ ! -d "$outaudio" ] && mkdir -p "$outaudio"
[ ! -d "$outvideo" ] && mkdir -p "$outvideo"

notify-send "$msg_download" "$link"

check_error() {
    error_code="$?"
    [ $error_code -ne 0 ] && notify-send "$msg_fail" "Error code ($error_code)\n$link" && exit $error_code
}

downloader="yt-dlp" # youtube-dl

case $format in
    'a') "$downloader" --add-metadata -icxf "bestaudio/best" --audio-format mp3 -o "$outaudio/$filename" "$link" ;;
    'd') "$downloader" --add-metadata "${other_args[@]}" -ic -o "$outvideo/$filename" "$link" ;;
    'l') "$downloader" --add-metadata "${other_args[@]}" -icf "best[height<=360]" -o "$outvideo/$filename" "$link" ;;
    'm') "$downloader" --add-metadata "${other_args[@]}" -icf "bestvideo[height<=1080]+bestaudio/best" -o "$outvideo/$filename" "$link" ;;
    'h') "$downloader" --add-metadata "${other_args[@]}" -icf "bestvideo+bestaudio/best" -o "$outvideo/$filename" "$link" ;;
    *) notify-send "$msg_invalid_format" "Format ($format)\n$link" ; exit 1 ;;
esac ; check_error

notify-send "$msg_loaded" "$link"
