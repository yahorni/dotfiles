# programs

super + grave
    $TERMINAL -e htop

super + w
    $TERMINAL -e ncmpcpp

super + {_,shift +} e
    $TERMINAL {_,-c dropdown}

super + shift + r
    pkill -USR1 -x sxhkd

super + t
    $TERMINAL -e newsboat -q
super + shift + t
    $TERMINAL -e transmission-remote-cli

super + p
    power_manager
super + shift + p
    fastkill

super + {_, shift +} a
    power_manager {suspend,lock}

super + s
    $TERMINAL -e calcurse -D "$XDG_CONFIG_HOME"/calcurse

super + d
    dmenu_run

super + {_, shift +} g
    corner_window {_,-H left}

super + Return
    $TERMINAL
super + shift + Return
    samedir

super + c
    show_selections
super + shift + c
    clipmenu

super + v
    $TERMINAL -e vifmrun
super + shift + v
    $TERMINAL -e neomutt

super + b
    pgrep $BROWSER || $BROWSER
super + shift + b
    $BROWSER

super + {_,shift +} n
    mpc {toggle,stop}

super + {minus,equal}
    mpc {prev,next}

super + shift + {minus,equal}
    mpc seek {-,+}5

super + {_, shift +} m
    dmenu_{_,un}mount

# bspwm
super + {h,j,k,l}
    opt={1,2,3,4} ; \
    declare -a dirs cycle ; \
    dirs=("west" "south" "north" "east") ; \
    cycle=("prev" "older" "newer" "next") ; \
    if bspc query -N -n focused.tiled; then \
        bspc node -f ${dirs[$opt]}.tiled ; \
    elif bspc query -N -n focused.floating; then \
        bspc node -f ${cycle[$opt]}.floating.local ; \
    fi

super + shift + {h,j,k,l}
    opt={1,2,3,4} ; \
    declare -a dirs shifts ; \
    dirs=("west" "south" "north" "east") ; \
    x=(-20 0 0 20) ; \
    y=(0 20 -20 0) ; \
    if bspc query -N -n focused.tiled; then \
        bspc node -s ${dirs[$opt]} ; \
    elif bspc query -N -n focused.floating; then \
        bspc node -v ${x[$opt]} ${y[$opt]} ; \
    fi

super + {_,shift + }q
    bspc node -{c,k}

control + alt + BackSpace
    bspc quit

super + r
    bspc wm -r

super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

control + super + {h,l}
    bspc desktop -f {prev,next}.local

super + f
    bspc node -t \~fullscreen

super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

super + space
    if bspc query -N -n focused.tiled; then \
        bspc node -f next.floating.local ; \
    elif bspc query -N -n focused.floating; then \
        bspc node -f next.tiled.local ; \
    fi

super + shift + space
    if bspc query -N -n focused.tiled; then \
        bspc node -t floating ; \
    elif bspc query -N -n focused.floating; then \
        bspc node -t tiled ; \
    fi

super + comma
    bspc node -g sticky

super + period
    winID="$(bspc query -N -n .hidden | tail -n1)" ; \
    bspc node $winID -g hidden=off ; \
    bspc node -f $winID

super + slash
    bspc node -g hidden
